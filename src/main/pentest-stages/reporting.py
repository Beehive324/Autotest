from typing import TypedDict, List
from langgraph.graph import StateGraph, START, END


class ReportingState(TypedDict):
    messages: List[str]
    vulnerabilities: List[str]
    ip_address: str
    port: int
    protocol: str
    service: str
    os: str



def _start_reporting(state: ReportingState):
    return {
        "messages": state.messages,
        "vulnerabilities": state.vulnerabilities,
        "ip_address": state.ip_address,
        "port": state.port,
    }  
    

def _report_agent(state: ReportingState):
    messages = state.messages
    vulnerabilities = state.vulnerabilities
    ip_address = state.ip_address
    port = state.port
    protocol = state.protocol
    service = state.service
    os = state.os  


workflow = StateGraph(ReportingState)

workflow.add_node(_start_reporting, "_start_reporting")
workflow.add_node(_report_agent, "_report_agent")

workflow.add_edge(START, "_start_reporting")
workflow.add_edge("_start_reporting", "_report_agent")
workflow.add_edge("_report_agent", END)






